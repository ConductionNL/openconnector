---
description: Rules for PHP files
globs: ["*.php"]
---
# PHP Coding Standards and Best Practices

## File Structure
- All PHP files should start with a docblock containing:
  - Class name
  - Category
  - Package
  - Author
  - Copyright
  - License
  - Version
  - Link to application

## Code Style (PHPCS Rules)
- Follow PEAR standard with specific customizations:
  - Line length: max 125 chars (soft limit), 150 chars (hard limit)
  - No Yoda conditions
  - Use short array syntax []
  - One argument per line in multi-line function calls
  - No inline control structures
  - No multiple statements on one line
  - Space after type casting
  - No underscore prefix for private methods/properties

### Spacing Rules
- Array bracket spacing (Squiz)
- Function declaration argument spacing (Squiz)
- Control structure spacing (Squiz)
- Function spacing: 1 line between functions
- Member var spacing (Squiz)
- Operator spacing (Squiz)
- No superfluous whitespace

### Commenting Rules
- Block comments properly aligned (Squiz)
- DocComment alignment (Squiz)
- Empty catch must have comment
- Proper inline comment formatting
- Long condition closing comments
- Variable comments required

### Forbidden Functions/Patterns
- sizeof (use count)
- delete (use unset)
- print (use echo)
- is_null
- create_function
- var_dump
- No inline if statements

### Array Formatting
- Custom array indentation rules
- No long array syntax
- Proper key/value alignment

## Method Requirements
- All methods, classes, and properties MUST have docblocks
- All methods MUST have:
  - Return type declarations
  - Parameter type hints
  - Default values for optional parameters
  - PHPStan and Psalm annotations
  - PHPUnit tests
  - Inline comments explaining each logical step
  - Docblocks containing:
    - @param annotations with types and descriptions
    - @return annotation with type and description
    - @throws annotations for all possible exceptions
    - @since annotation with version number
    - @deprecated annotation if applicable
- Properties MUST:
  - Have docblocks with type information
  - Use readonly modifier when the property should not be modified after construction
  - Include visibility modifier (public, protected, private)
  - Have proper type hints
- Classes MUST:
  - Have complete docblocks as per template
  - Follow single responsibility principle
  - Use proper inheritance and interfaces
  - Have descriptive names matching their purpose

## Documentation
- Use Docusaurus for documentation
- Technical and user documentation should be in website/docs folder
- All code changes must be documented
- Use single quotes (') instead of backticks (`) in documentation

## Testing
- Write PHPUnit tests for all methods
- Tests should be placed in tests/ directory
- Test names should be descriptive and follow the pattern test[MethodName]_[Scenario]

## Error Handling
- Use appropriate exception types
- Include meaningful error messages
- Log errors appropriately
- Handle edge cases

## Security
- Never expose sensitive data
- Use prepared statements for database queries
- Validate all input
- Sanitize all output
- Follow OWASP security guidelines

## Performance
- Optimize database queries
- Use caching where appropriate
- Minimize memory usage
- Consider scalability

## Dependencies
- Use Composer for dependency management
- Keep dependencies up to date
- Document all external dependencies
- Use specific version constraints 