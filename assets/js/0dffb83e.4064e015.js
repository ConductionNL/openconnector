"use strict";(self.webpackChunkopen_connector_docs=self.webpackChunkopen_connector_docs||[]).push([[821],{8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var r=i(6540);const t={},o=r.createContext(t);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}},8552:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"roadmap","title":"OpenConnector Roadmap","description":"This document outlines the planned development roadmap for OpenConnector. Our immediate focus is on expanding file-based data source support to enable more flexible data integration scenarios.","source":"@site/docs/roadmap.md","sourceDirName":".","slug":"/roadmap","permalink":"/docs/roadmap","draft":false,"unlisted":false,"editUrl":"https://github.com/conductionnl/openconnector/tree/main/website/docs/roadmap.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"OpenConnector Documentation","permalink":"/docs/intro"},"next":{"title":"SharePoint Integration","permalink":"/docs/tutorials/sharepoint"}}');var t=i(4848),o=i(8453);const s={},l="OpenConnector Roadmap",a={},c=[{value:"Current Development Focus",id:"current-development-focus",level:2},{value:"File-Based Data Sources (Q1 2024)",id:"file-based-data-sources-q1-2024",level:3},{value:"Future Considerations",id:"future-considerations",level:2},{value:"Contributing",id:"contributing",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"openconnector-roadmap",children:"OpenConnector Roadmap"})}),"\n",(0,t.jsx)(n.p,{children:"This document outlines the planned development roadmap for OpenConnector. Our immediate focus is on expanding file-based data source support to enable more flexible data integration scenarios."}),"\n",(0,t.jsx)(n.h2,{id:"current-development-focus",children:"Current Development Focus"}),"\n",(0,t.jsx)(n.h3,{id:"file-based-data-sources-q1-2024",children:"File-Based Data Sources (Q1 2024)"}),"\n",(0,t.jsx)(n.p,{children:"Our primary focus is adding support for common file formats as data sources:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Excel (.xlsx, .xls) file support"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Read capabilities for workbooks and worksheets"}),"\n",(0,t.jsx)(n.li,{children:"Column mapping and data type detection"}),"\n",(0,t.jsx)(n.li,{children:"Support for multiple sheets"}),"\n",(0,t.jsx)(n.li,{children:"Handling of formatted cells and formulas"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"CSV file integration"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Configurable delimiter support"}),"\n",(0,t.jsx)(n.li,{children:"Character encoding detection"}),"\n",(0,t.jsx)(n.li,{children:"Header row handling"}),"\n",(0,t.jsx)(n.li,{children:"Data type inference"}),"\n",(0,t.jsx)(n.li,{children:"Support for escaped characters"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"YAML file processing"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Full YAML 1.2 specification support"}),"\n",(0,t.jsx)(n.li,{children:"Complex data structure handling"}),"\n",(0,t.jsx)(n.li,{children:"Multi-document support"}),"\n",(0,t.jsx)(n.li,{children:"Aliasing and anchoring features"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These file-based connectors will include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Automated file watching for changes"}),"\n",(0,t.jsx)(n.li,{children:"Scheduled import capabilities"}),"\n",(0,t.jsx)(n.li,{children:"Data validation and transformation"}),"\n",(0,t.jsx)(n.li,{children:"Error handling and reporting"}),"\n",(0,t.jsx)(n.li,{children:"Support for large file processing"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"future-considerations",children:"Future Considerations"}),"\n",(0,t.jsx)(n.p,{children:"While we are currently focused on file-based data sources, future roadmap items will be added based on community feedback and business needs. We encourage users to submit feature requests and use cases through our GitHub repository."}),"\n",(0,t.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,t.jsxs)(n.p,{children:["We welcome contributions to help implement these roadmap items! Please visit our ",(0,t.jsx)(n.a,{href:"https://github.com/conductionnl/openconnector",children:"GitHub repository"})," to:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Discuss implementation approaches"}),"\n",(0,t.jsx)(n.li,{children:"Submit pull requests"}),"\n",(0,t.jsx)(n.li,{children:"Report bugs or issues"}),"\n",(0,t.jsx)(n.li,{children:"Suggest new roadmap items"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For contribution guidelines, please refer to CONTRIBUTING.md in our repository."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);